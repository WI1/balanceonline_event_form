<?php
function balanceonline_eventform_menu() {
	$items = array();
	$items['balanceonline_eventform/add/%user/%node'] = array(
		'title' => t('add teammember'),
		'page callback' => 'balanceonline_eventform_add_member',
		'access callback'=> 'user_access',
    'access arguments'=>array('rsvp on own events'),
		'page arguments' => array(2, 3),
		'type' => MENU_CALLBACK
	);
	$items['balanceonline_eventform/addAll/%node'] = array(
		'title' => t('add all team members'),
		'page callback' => 'balanceonline_eventform_add_all_members',
		'page arguments' => array(2, 3),
		'access callback'=> 'user_access',
    'access arguments'=>array('rsvp on own events'),
		'type' => MENU_CALLBACK
	);
	return $items;
}

/**
 * Adds all members of the og groups of a node to an invitation.
 *
 * @param StdClass $node
 */
function balanceonline_eventform_add_all_members($node) {
	$users = balanceonline_eventform_get_og_group_members($node);
	$rsvp = balanceonline_eventform_get_rsvp($node);

	$addedUsers = array();
	foreach($users as $u) {
		$success = rsvp_api_add_guests($rsvp->rid, null, array(
			$u->name
		), false);
		if($success) {
			$addedUsers[] = $u->name;
		}
	}
	if($success) {
		drupal_set_message(t('Es wurden folgende User hinzugefügt', null, 'de') . ': ' . implode(', ', $addedUsers));
	}
	drupal_goto();
}
/**
 * Add an user to an invitation.
 *
 * @param object $user
 *   User objects
 * @param object $node
 *   The current node
 */
function balanceonline_eventform_add_member($user, $node) {
	$rsvp = balanceonline_eventform_get_rsvp($node);

	$success = rsvp_api_add_guests($rsvp->rid, null, array(
		$user->name
	), false);

	if ($success) {
		drupal_set_message($user->name . " wurde hinzugefügt.");
	}

	drupal_goto();
}

function getUserName($id) {
  return db_result(db_query("SELECT name FROM {users} WHERE uid = %d", $id));
}

function balanceonline_eventform_get_og_group_members($node) {
	$nodeids = $node->og_groups;
	if (count($nodeids) == 0) {
		return;
	}
	global $user;
	$groupid = db_result(db_query('SELECT rid FROM {role} where name = "Project Members"'));
	$result  = db_query(sprintf(
		'SELECT users.uid, users.name, users.picture from {og_uid}
		LEFT JOIN {og_users_roles} on og_users_roles.ogr_id = og_uid.nid
		LEFT JOIN {users} on og_uid.uid = users.uid
		WHERE og_users_roles.rid = %d AND og_uid.nid IN (%s)', $groupid, implode(',', $nodeids)
	));
	$users   = array();
	while ($u = db_fetch_object($result)) {
		$users[] = $u;
	}
	return $users;
}

/**
 * Displays all teammembers
 *
 * @param object $rsvp
 *   The rsvp object...
 * @param object $node
 *   The current node
 * @param array $guestIds
 *   A list of guest ids. Users which are part of the guestIds array will not be displayed.
 * @return string The rendered html
 */
function balanceonline_eventform_display_teammembers($rsvp, $node, &$guestIds) {
	$users = balanceonline_eventform_get_og_group_members($node);
	foreach($users as $u) {
		if (isset($guestIds[$u->uid])) {
			continue;
		}
		$html .= balanceonline_eventform_display_item($u->picture, 'balanceonline_eventform/add/' . $u->uid . '/' . $node->nid, $node, $u->name);
	}
	if ($html != '') {
		$html = '<br /><div class="eventform_rsvp_row"><h3>' . 'Teammitglieder hinzufügen' . '</h3>' . '<p>' . l('Alle Teammitglieder hinzufügen', 'balanceonline_eventform/addAll/' . $node->nid, array(
			'query' => 'destination=node/' . $node->nid . '/edit?manage_event=rsvp',
		)) . '</p>' . $html . '</div><div style="clear:both"></div>';
	}
	return $html;
}
/**
 * Displays guests segements. The segments could are accepted, declined, maybe and no response.
 *
 * @param int $const
 *   The const could be: RSVP_ATT_YES,RSVP_ATT_NO,RSVP_ATT_MAYBE,RSVP_ATT_NONE
 * @param object $rsvp
 *   The rsvp object...
 * @param string $title
 *   The title of the segement
 * @param object $node
 *   The current node
 * @param array $guestIds
 *   A list of guest ids.
 * @return string The rendered html
 */
function balanceonline_eventform_display_all_guests_row($const, $rsvp, $title, $node, &$guestIds) {
	$html      = '';
	$attendees = rsvp_function_load_guests($rsvp->rid, $const);
	while ($attendee = db_fetch_object($attendees)) {
		$user                     = user_load($attendee->uid);
		$guestIds[$attendee->uid] = true;
		$html .= balanceonline_eventform_display_item($user->picture, null, $node, $user->name);
	}
	if ($html != '') {
		$html = '<div class="eventform_rsvp_row"><h4>' . t($title) . '</h4>' . $html . '</div>';
	}
	return $html;
}
/**
 * Displays the guests of the rsvp invitation
 *
 * @param object $rsvp
 *   The  rsvp object...
 * @param object $node
 *   The current node
 * @param object $guestsIds
 *   A list reference of. The mehtod fills the array with all ids of the guests.
 * @return string The rendered html
 */
function balanceonline_eventform_display_all_guests($rsvp, $node, &$guestIds) {
	$totals = rsvp_function_load_totalguests($rsvp->rid);

	$html = '';
	$html .= '<div style="clear:both"></div><br /><br /><div class="eventform_rsvp_row"><h3>' . t('Gäste (total: %total, bestätigt: %yes, abgelehnt: %no, vielleicht: %maybe, keine Rückmeldung: %none)', array(
		'%total' => $totals['all'],
		'%yes' => $totals['yes'],
		'%no' => $totals['no'],
		'%maybe' => $totals['maybe'],
		'%none' => $totals['none']
	), null, 'de') . '</h3>';
	$html .= balanceonline_eventform_display_all_guests_row(RSVP_ATT_YES, $rsvp, 'accepted', $node, $guestIds);
	$html .= balanceonline_eventform_display_all_guests_row(RSVP_ATT_NO, $rsvp, 'declined', $node, $guestIds);
	$html .= balanceonline_eventform_display_all_guests_row(RSVP_ATT_MAYBE, $rsvp, 'Maybe', $node, $guestIds);
	$html .= balanceonline_eventform_display_all_guests_row(RSVP_ATT_NONE, $rsvp, 'No response', $node, $guestIds);

	$html .= '</div><div style="clear:both"></div>';
	return $html;
}
/**
 * Returns the first rsvp object of the obmitted node.
 * If no rsvp object exists an new rsvp invitation will be created.
 *
 * @param object $node
 *   The  node...
 * @return int The rsvp object
 */
function balanceonline_eventform_get_rsvp($node) {
	global $user;

	$rsvps = rsvp_function_load_invitations_owner($node->nid, NULL);
	while ($rsvp = db_fetch_object($rsvps)) {
		return $rsvp;
	}


	$rsvp = rsvp_api_create_invitation($node->nid, $node->title . ' ' . $user->name . ' hat Sie eingeladen.
 ', date(DATE_RFC1036));
	return $rsvp;
}
/**
 * Display an list item. The item could be an focusgroup or an user
 *
 * @param string $picture
 *   The url of the image which should be displayed
 * @param string $link
 *   the link of the list item. If null no link will be generated
 * @param object $node
 *   The current node
 * @param string $subtext
 *   The text under the image
 */
function balanceonline_eventform_display_item($picture, $link = null, $node, $subtext = '') {
	$linkstart = '';
	$linkend   = '';
	if ($link != null) {
		$linkstart = '<a href="' . url($link, array(
			'query' => 'destination=node/' . $node->nid . '/edit?manage_event=rsvp'
		)) . '">';
		$linkend   = '</a>';
	}
	return '<div class="eventform_rsvp_item">' . $linkstart . theme('imagecache', 'userpic-1c-square', (empty($picture) ? 'dummy.jpg' : $picture)) . '<br />' . $subtext . $linkend . '</div>';
}

/**
 * Adds Teilnehmer hinzufuegen tab to tab menu.
 *
 * @param array $iform
 *   The form to alter
 * @param array $node
 *   The current node
 */

function balanceonline_eventform_manage_event(&$iform, $node) {
	$iform['rsvp_overview_created_form']['#type']         = 'fieldset';
	$iform['rsvp_overview_created_form']['html']['#type'] = 'markup';

	//$iform['rsvp_overview_created_form']=$form['rsvp_overview_created_form'];
	$iform['rsvp_overview_created_form']['#title'] = t('Teilnehmer verwalten');
	if ($node->nid == null) {
		$iform['rsvp_overview_created_form']['html']['#value'] = '<div>Bitte speichern Sie die Veranstaltung bevor Sie Teilnehmer hinzufügen</div>';
		return;
	}
	if ($_REQUEST['manage_event'] == 'rsvp') {
		drupal_add_js('$(document).ready(function (){$("a[href=#rsvp_overview_created_form]").click()});', 'inline');
	}
	drupal_add_css((drupal_get_path('module', 'balanceonline_eventform') . '/eventform_rsvp.css'));
	global $user;
	$rsvp      = balanceonline_eventform_get_rsvp($node);
	$form_id   = 'rsvp_overview_form';
	$html      = '';
	$grouplist = menu_tree_all_data('menu-fgtop');

	$html .= '<div class="eventform_rsvp_row"><br /><h3>' . t('Fokusgruppen einladen:') . '</h3>';
	foreach ($grouplist as $groupid => $groupname) {
		$groupid = $grouplist[$groupid]['link']['link_path'];
		if ($groupid == '<front>') {
			continue;
		}
		$groupids  = explode('/', $groupid);
		$groupid   = $groupids[1];
		$groupnode = node_load($groupid);
		$html .= balanceonline_eventform_display_item('/sites/balanceonline.org/themes/balance/img/badges_mittel/' . $groupnode->field_projectlogo[0]['filename'], 'rsvp/' . $rsvp->rid . '/attendees/og/' . $groupid, $node);
	}
	$html .= '<div><div style="clear:both"></div>';
	$guestIds = array();

	$html .= balanceonline_eventform_display_teammembers($rsvp, $node, $guestIds) . balanceonline_eventform_display_all_guests($rsvp, $node, $guestIds);

	$html .= '<a class="event-form-submit" href="' . url('rsvp/' . $rsvp->rid . '/attendees/send', array(
		'query' => 'destination=node/' . $node->nid . '/edit?manage_event=rsvp'
	)) . '">' . t('Einladung verschicken') . '</a>';
	$html .= '</div></div>';
	$iform['rsvp_overview_created_form']['html']['#value'] = $html;
}
/**
 * Modifies the event_node_form form
 *
 * @uses rsvp module
 * @param array $form
 * @param array $form_state
 */
function balanceonline_eventform_form_alter(&$form, &$form_state, $form_id) {
	if ($form_id == 'event_node_form') {
		if(isset($form_state['og_gids'])) {
			$form['buttons']['submit']['#submit'][] = 'balanceonline_eventform_node_form_submit';
		}
		unset($form['og_nodeapi']['#type']);
		// $form['#submit'][]='balanceonline_eventform_signup_node_submit';
		// print_r($form);
		$eventFieldSet = $form['event'];
		$path          = drupal_get_normal_path($_GET['q']);

		$nids = explode('/', $path);
		$nid  = $nids[1];
		$node = node_load($nid);
		unset($form['event']['#type']);
		$groups = $form['og_nodeapi']['visible']['og_groups'];
		$public = $form['og_nodeapi']['visible']['og_public'];

		$form['body_field']['og_groups'] = $groups;
		$form['body_field']['og_public'] = $public;
		unset($form['og_nodeapi']['visible']['og_groups']);
		unset($form['og_nodeapi']['visible']['og_public']);

		$form['event']['status_2_premarkup']['#value']  = '<fieldset class="collapsible" style="width:95%"><legend class="collapse-processed"><a href="#">' . t('Do you want to appoint a space of time for this event?') . '</a></legend><div style="padding:4px">';
		$form['event']['status_2_premarkup']['#weight'] = -100;
		$form['event']['#weight']                       = -4;
		$form['event']['status_2_postmarkup']['#value'] = '</div></fieldset>';
		balanceonline_eventform_manage_event($form, $node);
	}
}

function balanceonline_eventform_node_form_submit($form, &$form_state) {
	// on a new event form, redirect to the member admin page on save
	$form_state['redirect'] = array('node/' . $form_state['nid'] . '/edit', 'manage_event=rsvp');
}